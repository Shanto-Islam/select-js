const select=(e,t=document)=>{if("string"!=typeof e)throw new Error("Selector must be a string.");if(!(t instanceof Element||t===document))throw new Error("Context must be a DOM element or document.");const r=t.querySelectorAll(e);if(0===r.length)return console.warn(`No elements found for selector: ${e}`),null;const n={elements:Array.from(r),addClass(e){if("string"!=typeof e)throw new Error("Class name must be a string.");return this.elements.forEach((t=>t.classList.add(e))),this},removeClass(e){if("string"!=typeof e)throw new Error("Class name must be a string.");return this.elements.forEach((t=>t.classList.remove(e))),this},toggleClass(e){if("string"!=typeof e)throw new Error("Class name must be a string.");return this.elements.forEach((t=>t.classList.toggle(e))),this},setText(e){if("string"!=typeof e)throw new Error("Text must be a string.");return this.elements.forEach((t=>t.textContent=e)),this},on(e,t){if("string"!=typeof e)throw new Error("Event must be a string.");if("function"!=typeof t)throw new Error("Handler must be a function.");return this.elements.forEach((r=>r.addEventListener(e,t))),this},setAttribute(e,t){if("string"!=typeof e||"string"!=typeof t)throw new Error("Both name and value must be strings.");return this.elements.forEach((r=>r.setAttribute(e,t))),this},removeAttribute(e){if("string"!=typeof e)throw new Error("Name must be a string.");return this.elements.forEach((t=>t.removeAttribute(e))),this},getAttribute(e){if("string"!=typeof e)throw new Error("Name must be a string.");return this.elements.length>0?this.elements[0].getAttribute(e):null},addStyle(e){if("object"!=typeof e||Array.isArray(e))throw new Error("Style must be an object.");return this.elements.forEach((t=>Object.assign(t.style,e))),this},removeStyle(e){if("string"!=typeof e)throw new Error("Style name must be a string.");return this.elements.forEach((t=>t.style.removeProperty(e))),this},append(e){if("string"!=typeof e)throw new Error("HTML must be a string.");return this.elements.forEach((t=>t.insertAdjacentHTML("beforeend",e))),this},prepend(e){if("string"!=typeof e)throw new Error("HTML must be a string.");return this.elements.forEach((t=>t.insertAdjacentHTML("afterbegin",e))),this},remove(){return this.elements.forEach((e=>{e.parentNode&&e.parentNode.removeChild(e)})),this},toggleVisibility(){return this.elements.forEach((e=>{e.style.display="none"===e.style.display?"":"none"})),this},replaceWith(e){if("string"!=typeof e)throw new Error("HTML must be a string.");return this.elements.forEach((t=>{if(t.parentNode){const r=document.createRange().createContextualFragment(e);t.parentNode.replaceChild(r,t)}})),this}};return 1===r.length?r[0]:n},selectAll=(e,t=document)=>{if("string"!=typeof e)throw new Error("Selector must be a string.");if(!(t instanceof Element||t===document))throw new Error("Context must be a DOM element or document.");const r=t.querySelectorAll(e);return 0===r.length&&console.warn(`No elements found for selector: ${e}`),Array.from(r)};